name: Distribute To Firebase App Distribution
description: Upload artifacts to Firebase App Distribution within seconds
author: Nicholas Wong
branding:
  color: blue
  icon: cloud-drizzle
inputs:
  file:
    description: The release binary file to upload.
    required: true
  app:
    description: Your app's Firebase App ID. You can find the App ID in the Firebase console, on the General Settings page.
    required: true
  token:
    description: A refresh token that's printed when you authenticate your CI environment with the Firebase CLI (read Use the CLI with CI systems for more information).
    required: false
    deprecationMessage: Authenticating with `--token` is deprecated and will be removed in a future major version of `firebase-tools`. Instead, use a service account key with `GOOGLE_APPLICATION_CREDENTIALS` - https://cloud.google.com/docs/authentication/getting-started
  credentials:
    description: Content of the service account credentials file
    required: false
  credentials-file:
    description: Path to the Google service account credentials file
    required: false
  release-notes:
    description: Release notes for this build.
    required: false
  release-notes-file:
    description: Path to the file containing release notes for this build.
    required: false
  testers:
    description: The email addresses of the testers you want to invite.
    required: false
  testers-file:
    description: Path to the file containing the email addresses of the testers you want to invite.
    required: false
  groups:
    description: The tester groups you want to invite (refer to Manage testers). Groups are specified using group aliases, which you can look up in the Firebase console.
    required: false
  groups-file:
    description: Path to the file containing the tester groups you want to invite (refer to Manage testers). Groups are specified using group aliases, which you can look up in the Firebase console.
    required: false
  debug:
    description: A flag you can include to print verbose log output.
    required: false
    default: 'false'
  cache:
    description: Whether to cache the firebase tools for next job, keeping this on will speed up the build.
    required: false
    default: 'true'
  upgrade:
    description: Whether to attempt to upgrade firebase tools when cache is on, turning this off will speed up the build.
    required: false
    default: 'true'
runs:
  using: composite
  steps:
    - name: Checking node version
      id: node-version-above-18
      shell: bash
      run: bash etc/compare-node-version.sh
      continue-on-error: true
    - uses: actions/setup-node@v4
      if: ${{ steps.node-version-above-18.conclusion == 'failure' }}
      with:
        node-version: '18.x'
    - uses: actions/cache@v3
      if: ${{ inputs.cache == 'true' }}
      env: { cache-name: firebase-app-distribution-action }
      with:
        path: /usr/local/bin/firebase
        key: firebase-tools
    - name: Export content of credentials file as environment variable
      shell: bash
      if: ${{ inputs.credentials == null && inputs.credentials-file != null }}
      run: |
        echo "GOOGLE_APPLICATION_CREDENTIALS=${{ inputs.credentials-file }}" >> $GITHUB_ENV
    - name: Export credentials as environment variable
      shell: bash
      if: ${{ inputs.credentials != null }}
      run: |
        echo '${{ inputs.credentials }}' > $RUNNER_TEMP/credentials.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/credentials.json" >> $GITHUB_ENV
    - name: Install firebase tools if not installed
      shell: bash
      run: |
        if ! command -v firebase &> /dev/null; then
          curl -sL https://firebase.tools | sed s/latest/v13.16.0/ | bash
        elif test -f /usr/local/bin/firebase; then
          curl -sL https://firebase.tools | sed s/latest/v13.16.0/ | upgrade=${{ inputs.upgrade }} bash
        fi
    - name: Run firebase appdistribution:distribute 
      shell: bash
      run: |
        $(which firebase) appdistribution:distribute \
          --app ${{ inputs.app }} \
          --token "${{ inputs.token }}" \
          --release-notes "${{ inputs.release-notes }}" \
          --release-notes-file "${{ inputs.release-notes-file }}" \
          --testers "${{ inputs.testers }}" \
          --testers-file "${{ inputs.testers-file }}" \
          --groups "${{ inputs.groups }}" \
          --groups-file "${{ inputs.groups-file }}" \
          $(${{ inputs.debug }} && echo "--debug" || echo "") \
          ${{ inputs.file }}
